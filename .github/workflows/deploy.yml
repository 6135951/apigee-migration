name: Deploy Apigee Migration Tool

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: apigee-migration-tool

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up environment
      run: |
        # Create .env file from GitHub secrets
        cat > .env << EOF
        ENVIRONMENT=ci
        MONGO_ROOT_USERNAME=test_user
        MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}
        MONGO_DATABASE=test_db
        EMERGENT_LLM_KEY=${{ secrets.EMERGENT_LLM_KEY }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        CORS_ORIGINS=http://localhost:3000
        REACT_APP_BACKEND_URL=http://localhost:8001
        EOF
    
    - name: Run tests
      run: |
        docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d
        ./test-docker.sh
        docker-compose down

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}-backend
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          EMERGENT_LLM_KEY=${{ secrets.EMERGENT_LLM_KEY }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      env:
        # Use GitHub secrets for deployment
        EMERGENT_LLM_KEY: ${{ secrets.EMERGENT_LLM_KEY }}
        MONGO_ROOT_PASSWORD: ${{ secrets.MONGO_ROOT_PASSWORD }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        # Create deployment configuration
        cat > docker-compose.prod.yml << EOF
        version: '3.8'
        services:
          backend:
            image: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}:main-backend
            environment:
              EMERGENT_LLM_KEY: ${EMERGENT_LLM_KEY}
              MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
              JWT_SECRET: ${JWT_SECRET}
              ENVIRONMENT: production
        EOF
        
        # Deploy (example with SSH)
        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        scp -i deploy_key docker-compose.prod.yml user@$DEPLOY_HOST:/app/
        ssh -i deploy_key user@$DEPLOY_HOST "cd /app && docker-compose -f docker-compose.prod.yml up -d"